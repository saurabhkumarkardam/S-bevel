##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################
global:
  #Provide the service account name which will be created.
  serviceAccountName: vault-auth  
  cluster:
    provider: aws  # choose from: minikube | aws | azure | gcp
    cloudNativeServices: false # only 'false' is implemented
  vault:
    #Provide the type of vault
    #Eg. type: hashicorp
    type: hashicorp
    #Provide the vaultrole for an organization
    #Eg. vaultrole: supplychain-vault-role
    role: vault-role
    #Provide the vault server address
    #Eg. vaultaddress: http://Vault-884963190.eu-west-1.elb.amazonaws.com
    address:
    #Provide the kubernetes auth backed configured in vault for an organization
    #Eg. authpath: supplychain
    authPath: supplychain
    #Provide the secret engine.
    secretEngine: secretsv2
    #Provide the vault path where the secrets will be stored
    secretPrefix: "data/supplychain"

  proxy:
    #This will be the proxy/ingress provider. Can have values "haproxy" or "none"
    #Eg. provider: "haproxy"
    provider: haproxy
    #This field specifies the external url for the organization
    #Eg. externalUrlSuffix: test.blockchaincloudpoc.com
    externalUrlSuffix: test.blockchaincloudpoc.com

image:
  #Provide the image name for the server container
  #Eg. caTools: hyperledger/fabric-ca-tools:latest
  caTools: ghcr.io/hyperledger/bevel-fabric-ca:latest
  #Provide the valid image name and version to read certificates from vault server
  #Eg.alpineutils: ghcr.io/hyperledger/bevel-alpine:latest
  alpineUtils: ghcr.io/hyperledger/bevel-alpine:latest
  #Provide the secret to use if private repository
  #Eg. pullSecret: regcred
  pullSecret: 
  # Provide image pull policy
  pullPolicy: IfNotPresent

orgData:
  #Provide the CA URL for the organization without https
  #Eg. caAddress: ca.example.com
  caAddress: 
  #Provide the CA Admin User for the organization
  #Eg. caAdminUser: admin
  caAdminUser: supplychain-admin
  #Provide the CA Admin Password for the organization
  #Eg. caAdminPassword: adminpw
  caAdminPassword: supplychain-adminpw
  #Provide organization's name in lowercases
  #Eg. orgName: supplychain 
  orgName: supplychain
  #Provide organization's type (orderer or peer)
  #Eg. type: orderer
  type: orderer
  #Provide organization's subject
  #Eg. componentSubject: "O=Orderer,L=51.50/-0.13/London,C=GB"
  componentSubject: "O=Orderer,L=51.50/-0.13/London,C=GB"

users: 
  # Generating User Certificates with custom attributes using Fabric CA in Bevel for Peer Organizations
  usersList:
    - identity: user1
      attributes:
      - key: "hf.Revoker"
        value: "true"
    # - identity: user2
    #   attributes:
    #   - key: "hf.Revoker"
    #     value: "true"
  #Base64 encoded list of users
  #Eg. usersListAnsible: IC0gdXNlcjoKICAgICAgICAgIGlkZW50aXR5OiB1c2VyMQogICAgICAgICAgYXR0cmlidXRlczoKICAgICAgICAgICAgLSBrZXk6IGtleTEKICAgICAgIgICAgICAgIC0ga2V5OiBrZXkyCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlMgogICAgICAgIC0gdXNlcjoKICAgICAgICAgIGlkZW50aXR5OiB1c2VyMgogICAgICAgICAgYXR0cmlidXRlczoKICAgICAgICAgICAgLSBrZXk6IGtleTEKICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUxCiAgICAgICAgICAgIC0ga2V5OiBrZXkzCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlMw==
  usersListAnsible:

settings:
  #Flag to create configmaps for the organization. This flag must be set to true when installing the first orderer/peer in organization and false for others.
  createConfigMaps: true
  #Flag to refresh user certificates
  refreshCertValue: false
  #Flag to add a peer to an existing network
  addPeerValue: false
  #Flag to remove certificates on uninstall
  removeCertsOnDelete: false
  #Flag to remove orderer certificates on uninstall
  removeOrdererTlsOnDelete: false

labels:
  service: []
  pvc: []
  deployment: []
