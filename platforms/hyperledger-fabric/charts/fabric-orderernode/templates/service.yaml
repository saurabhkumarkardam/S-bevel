##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    run: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app: {{ .Release.Name }}
    app.kubernetes.io/component: fabric
    app.kubernetes.io/part-of: {{ include "fabric-orderernode.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- include "labels.service" . | nindent 4 }}
spec:
  type: {{ .Values.orderer.serviceType }}
  selector:
    app: {{ .Release.Name }}
  ports:
  - protocol: TCP
    targetPort: 7050
    port: {{ .Values.orderer.ports.grpc.clusterIpPort }}
    {{- if  (ne .Values.orderer.serviceType "ClusterIP") }}
    nodePort: {{ .Values.orderer.ports.grpc.nodeport }}
    {{- end }}
    name: grpc
  - name: grpc-web
    protocol: TCP
    targetPort: 7443
    port: 7443
  - name: operations
    protocol: TCP
    targetPort: 9443
    port: {{ .Values.orderer.ports.metrics.clusterIpPort }}
{{ if contains "2.5" .Values.global.version }}
  - name: onsadmin
    protocol: TCP
    targetPort: 7055
    port: 7055
{{- end }}
  {{- if (eq .Values.orderer.serviceType "ClusterIP") }}
  clusterIP: None
  {{- end }}
  
{{ if eq .Values.global.proxy.provider "haproxy" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    ingress.kubernetes.io/ssl-passthrough: "true"  
spec:
  ingressClassName: "haproxy"
  rules:
  - host: {{ .Release.Name }}.{{ .Release.Namespace }}.{{ .Values.global.proxy.externalUrlSuffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: {{ .Values.orderer.ports.grpc.clusterIpPort }}
  - host: {{ .Release.Name }}-proxy.{{ .Release.Namespace }}.{{ .Values.global.proxy.externalUrlSuffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 7443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ops
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: "haproxy"
  rules:  
  - host: {{ .Release.Name }}-ops.{{ .Release.Namespace }}.{{ .Values.global.proxy.externalUrlSuffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 9443
{{ end }}
