# Delete keys from HashiCorp Vault
- name: "Delete keys for {{ node_name }} in {{ org_name }} organization from Vault"
  shell: |
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/client/private/private_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/client/private/sig_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/client/public/public_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/client/public/verif_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/identity/private
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/identity/public
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/private/bls_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/private/private_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/private/sig_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/public/bls_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/public/public_keys
    vault kv delete {{ vault.secret_path | default('secretsv2') }}/{{ org_name }}/{{ node_type }}/{{ node_name }}/node/public/verif_keys
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  ignore_errors: yes

# Remove Policies of trustees
- name: Remove Policies of trustees
  environment:
    vault_token: "{{ vault.root_token }}"
  shell: |
    validateVaultResponse () {
      if [ ${1} != 204 ]; then
        echo "ERROR: Unable to retrieve. Http status: ${1}"
        exit 1
      fi
    }
    response_status=$(curl -o /dev/null -s -w "%{http_code}\n" --header "X-Vault-Token: ${vault_token}" --request DELETE {{ vault.url }}/v1/sys/policy/bevel-vault-mgmt-{{ org_name }}-keys-{{ org_name }}-indy-policy)
    validateVaultResponse ${response_status}

# Remove Kubernetes Authentication Methods of organizations
- name: Remove Kubernetes Authentication Methods of {{ org_name }}
  vars:
    auth_path: "kubernetes-{{ organization }}"
  environment:
    vault_token: "{{ vault.root_token }}"
  shell: |
    validateVaultResponse () {
      if [ ${1} != 204 ]; then
        echo "ERROR: Unable to retrieve. Http status: ${1}"
        exit 1
      fi
    }
    response_status=$(curl -o /dev/null -s -w "%{http_code}\n" --header "X-Vault-Token: ${vault_token}" --request DELETE {{ vault.url }}/v1/sys/auth/{{ org_name }})
    validateVaultResponse ${response_status}
  when: vault.root_token is defined
