- name: Initialize variable and list
  set_fact:
    trustee_name: "{{ org.services.trustee | default('') }}"
    endorser_name: "{{ org.services.endorser | default('') }}"
    steward_list: []

# Generate IPFS node HelmRelease files
- name: "Maintain stewards"
  set_fact:
    steward_list: "{{ steward_list + [stewards_item.name] }}"
  loop: "{{ stewards }}"
  loop_control:
    loop_var: stewards_item
  ignore_errors: true

- name: Display initialized variables and list
  debug:
    msg: |
      trustee_name: "{{ trustee_name }}"
      endorser_name: "{{ endorser_name }}"
      steward_list: "{{ steward_list }}"

# Get the kubernetes server url
- name: Get the kubernetes server url
  shell: |
    KUBECONFIG={{ kubernetes.config_file }} kubectl config view --minify | grep server | cut -f 2- -d ":" | tr -d " "
  register: kubernetes_server_url

# - name: Debug Directory Path
#   debug:
#     msg: "Directory Path: {{ values_dir }}/{{ org_name }}"

# - name: Ensure values_dir/{{ org_name }} exists
#   file:
#     path: "{{ values_dir }}/{{ org_name }}"
#     state: directory
#     mode: '0755'  # Adjust permissions as needed
#   # check_mode: no  # Set to 'yes' for dry-run/testing

# - name: "Ensure {{ values_dir }}/{{ org_name }} dir exists"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/check/directory"
#   vars:
#     path: "{{ values_dir }}/{{ org_name }}"

# vars:
#   values_dir: "/home/saurabh/S-bevel/platforms/hyperledger-indy/releases/dev"
#   org_name: "authority"

# Ensure the directory of auth job existance, if not exits it creates a new one
- name: Ensure dir exists
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/directory"
  vars:
    path: "/home/saurabh/S-bevel/platforms/hyperledger-indy/releases/dev/authority"

# Generate Indy vault policy and role for stewards
- name: Stewards vault policy and role generating
  template:
    src: "{{ dlt_templates[component_type] }}"
    dest: "{{ values_dir }}"
  # vars:
  #   # component_type: generate-keys
  #   # cloud_provider: {{ cloud_provider.cloud_provider | lower }}
  #   values_file: "{{ release_dir }}/{{ component_type }}/{{ component_name }}/{{ identity_name }}.yaml"
  #   chart: "{{ chartName }}"
  #   kubernetes_server: "{{ kubernetes_server_url.stdout }}"
