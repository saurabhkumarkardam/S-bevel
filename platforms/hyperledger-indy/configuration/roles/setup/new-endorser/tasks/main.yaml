# Initialize variables for trustee & endorser
- name: "Initialize variables for trustee & endorser"
  set_fact:
    trustee_name: ""
    trustee_org: ""
    endorser_name: ""
    endorser_org: ""
    # kubernetes: ""

# Set trustee and endorser variables
- name: "Set trustee and endorser variables"
  set_fact:
    trustee_name: "{{ trustee_name | default('') if trustee_name != '' else (org.services.trustee | lower if org.services.trustee is defined else trustee_name) }}"
    trustee_org: "{{ trustee_org | default('') if trustee_org != '' else (org.name | lower if org.services.trustee is defined else trustee_org) }}"
    endorser_name: "{{ endorser_name | default('') if endorser_name != '' else (org.services.endorser | lower if org.services.endorser is defined else endorser_name) }}"
    endorser_org: "{{ endorser_org | default('') if endorser_org != '' else (org.name | lower if org.services.endorser is defined else endorser_org) }}"
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org

###########################################################################
- name: Set Kubernetes
  set_fact:
    kubernetes: "{{ (network['organizations'] | selectattr('name', 'equalto', endorser_org) | first).k8s }}"
  when:
    - (endorser_name is defined) and (endorser_name | length > 0)
    - (endorser_org is defined) and (endorser_org | length > 0)
###########################################################################

# Get Endorser keys
- name: "Get Endorser keys"
  include_tasks: endorser_keys.yaml
  when:
    - (endorser_name is defined) and (endorser_name | length > 0)
    - (endorser_org is defined) and (endorser_org | length > 0)

###########################################################################
# # Gather Kubernetes cluster information
# - name: Gather cluster info
#   community.kubernetes.k8s_cluster_info:
#     kubeconfig: "{{ kubernetes.config_file }}"
#   register: cluster_info

# # Set the Kubernetes server URL fact
# - name: Set kubernetes_server_url fact
#   set_fact:
#     kubernetes_server_url: "{{ cluster_info.connection.host }}"
###########################################################################

# Deploy endorser node
- name: "Deploy endorser node"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/create/job_component"
  vars:
    type: "indy_endorser"
    org: "{{ network['organizations'] | selectattr('name', 'equalto', endorser_org) | first }}"
    # kubernetes: "{{ org.k8s }}"
    component_name: "{{ endorser_name }}"
    component_ns: "{{ trustee_org }}-indy"
    values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}/{{ org.name | lower }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    # cloud_provider: "{{ org.cloud_provider | lower }}"
    # vault: "{{ org.vault }}"
    # kubernetes_server: "{{ kubernetes_server_url }}"
  when:
    - (endorser_name is defined) and (endorser_name | length > 0)
    - (endorser_org is defined) and (endorser_org | length > 0)

# Check if endorser job is completed
- name: "Check if endorser job is completed"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    org: "{{ network['organizations'] | selectattr('name', 'equalto', endorser_org) | first }}"
    component_name: "{{ endorser_name }}"
    component_type: Job
    namespace: "{{ trustee_org }}-indy"
    kubernetes: "{{ org.k8s }}"
  when:
    - (endorser_name is defined) and (endorser_name | length > 0)
    - (endorser_org is defined) and (endorser_org | length > 0)
