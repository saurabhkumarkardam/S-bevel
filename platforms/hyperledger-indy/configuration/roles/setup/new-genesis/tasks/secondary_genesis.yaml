# Set organization variable based on the first organization in the network
- name: "Set organization variable"
  set_fact:
    organization: "{{ network.organizations[0] }}"

- name: "secondary genesis pre-req"
  shell: |
    KUBECONFIG={{ Kubernetes.config_file }} kubectl --namespace "{{ org_name }}-indy" get configmap dtg -o jsonpath='{.data.domain_transactions_genesis}' > domain_transactions_genesis.json
    KUBECONFIG={{ Kubernetes.config_file }} kubectl --namespace "{{ org_name }}-indy" get configmap ptg -o jsonpath='{.data.pool_transactions_genesis}' > pool_transactions_genesis.json
  args:
    chdir: "{{ playbook_dir }}/../../hyperledger-indy/charts/indy-genesis/files/"
  vars:
    org_name: "{{ organization.name | lower }}"
    Kubernetes: "{{ organization.k8s }}"

# Get the kubernetes server url
- name: Get the kubernetes server url
  shell: |
    KUBECONFIG={{ network['organizations'][0].k8s.config_file }} kubectl config view --minify | grep server | cut -f 2- -d ":" | tr -d " "
  register: kubernetes_server_url

- name: Generate HR file for the remaining organization
  include_tasks: secondary_genesis_orgs.yaml
  loop: "{{ network['organizations'][1:] }}"  # Skip the first organization
  loop_control:
    loop_var: org

# - name: generate-keys
#   include_role:
#     name: create/helm_component/new-generate-keys
#   vars:
#     org_name: "{{ org.name | lower }}"
#     cloud_provider: "{{ org.cloud_provider | lower }}"
#     vault: "{{ org.vault }}"
#     kubernetes_server: "{{ kubernetes_server_url.stdout }}"
#     secondaryGenesis: false
#     component_name: "generate-genesis"
#     component_type: "generate-genesis"
#     component_ns: "{{ org_name }}-indy"
#     values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}"
#     charts_dir: "{{ org.gitops.chart_source }}"
#   loop: "{{ network['organizations'][1:] }}"  # Skip the first organization
#   loop_control:
#     loop_var: org

# # Push the created deployment files to repository
# - name: "Push the created deployment files to repository"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
#   vars:
#     org: "{{ network['organizations'] | first }}"
#     gitops: "{{ org.gitops }}"
#     component_ns: "{{ org.name | lower }}-indy"
#     GIT_DIR: "{{ playbook_dir }}/../../../"
#     msg: "[ci skip] Pushing key management job files for {{ component_ns }}"

# # Check if vault_kubernetes is completed
# - name: Check if vault_kubernetes job is completed
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
#   vars:
#     component_name: "generate-genesis"
#     component_type: Job
#     org: "{{ network['organizations'] | first }}"
#     component_ns: "{{ org.name | lower }}-indy"
#     namespace: "{{ component_ns }}"
#     kubernetes: "{{ org.k8s }}"
