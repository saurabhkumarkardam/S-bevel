- name: Deploy Stewards
  include_role:
    name: create/helm_component/new-generate-keys
  vars:
    # node_public_ip: "{{  }}" # hard-code it
    node_port: "{{ steward.node.port }}"
    node_external_port: "{{ steward.node.ambassador }}"
    # client_public_ip: "{{  }}" # hard-code it
    client_port: "{{ steward.client.port }}"
    client_external_port: "{{ steward.client.ambassador }}"
    values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ org_name }}/{{ steward.name | lower }}"
  loop: "{{ org.services.stewards }}"
  loop_control:
    loop_var: steward
  when: steward is defined and steward | length > 0

# Push the created deployment files to repository
- name: "Push the created deployment files to repository"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    msg: "[ci skip] Pushing key management job files for {{ component_ns }}"
    gitops: "{{ org.gitops }}"
  when: org.services.stewards is defined and org.services.stewards | length > 0

# # Check if vault_kubernetes is completed
# - name: Check if vault_kubernetes job is completed
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
#   vars:
#     component_type: Job
#     namespace: "{{ component_ns }}"

# Check if all stewards are running
- name: Check if all stewards are running
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: Pod
    label_selectors:
      - app = {{ component_name }}
    namespace: "{{ component_ns }}"
  tags: notest
  when: org.services.stewards is defined and org.services.stewards | length > 0
