##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
##############################################################################################
# Network Configuration File for HyperLedger-Indy Distributed Ledger Technology (DLT) Platform

## Overview
# This configuration file is intended for deploying a HyperLedger-Indy platform. 
# The deployment must adhere to the following network rules:
# - Exactly one Trustee per network
# - Exactly one Endorser per network
# - A minimum of four Stewards per network

## Sample Configuration
# This sample configuration file demonstrates a HyperLedger-Indy network with two organizations:
# - Organization 1: Contains only the Trustee.
# - Organization 2: Contains four Stewards and one Endorser.

## Customization
# We can customize this configuration to include any number of organizations. 
# However, it is imperative to comply with the network rules mentioned in the Overview section.
##############################################################################################

network:
  # Network level configuration specifies the attributes required for each organization
  # to join an existing network.
  type: indy
  version: 1.12.1  # Supported versions 1.11.0 and 1.12.1

  #Environment section for Kubernetes setup
  env:
    type: "dev"                    # Environment tag, useful for running multiple instances on a single cluster
    proxy: ambassador              # Must be 'ambassador' as 'haproxy' is not implemented for Indy
    proxy_namespace: "ambassador"  # Namespace for the proxy
    #  These ports are enabled per cluster, so if you have multiple clusters you do not need so many ports
    #  This sample uses a single cluster, so we have to open 3 ports for each Node. These ports are again specified for each organization below
    ambassadorPorts:          # Any additional Ambassador ports can be given here, this is valid only if proxy='ambassador'
      portRange:              # Range of ports for Ambassador
        from: 15010
        to: 15052
    loadBalancerSourceRanges:   # (Optional) Default value is '0.0.0.0/0', this value can be changed to any other IP adres or list (comma-separated without spaces) of IP adresses, this is valid only if proxy='ambassador'
    retry_count: 20             # Retry count for the checks
    external_dns: enabled       # Should be enabled if using external-dns for automatic route configuration

  # Docker registry details where images are stored. This will be used to create k8s secrets
  # Please ensure all required images are built and stored in this registry.
  # Do not check-in docker_password.
  docker:
    url: "ghcr.io/hyperledger"
    username: "docker_username"
    password: "docker_password"

  # Allows specification of one or many organizations that will be connecting to a network.
  organizations:
    # Specification for the 1st organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: authority
      # type: peer
      external_url_suffix: indy.blockchaincloudpoc.com  # Provide the external dns suffix. Only used when Indy webserver/Clients are deployed.
      cloud_provider: aws                               # Supported values: 'aws-baremetal' | 'aws' | 'azure' | 'gcp' | 'minikube' | 

      aws:
        access_key: "aws_access_key"            # AWS Access key
        secret_key: "aws_secret_key"            # AWS Secret key
        encryption_key: "encryption_key_id"     # AWS encryption key. If present, it's used as the KMS key id for K8S storage class encryption.
        zone: "availability_zone"               # AWS availability zone
        region: "region"                        # AWS region

      publicIps: ["1.1.1.1", "2.2.2.2"]        # List of all public IP addresses of each availability zone from all organizations in the same k8s cluster
      azure:
        node_resource_group: "MC_myResourceGroup_myCluster_westeurope"

      # Kubernetes cluster deployment variables. The config file path has to be provided in case
      # the cluster has already been created.
      k8s:
        config_file: "/path/to/cluster_config"
        context: "kubernetes-admin@kubernetes"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "vault_addr"
        root_token: "vault_root_token"
        
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "https" # Option for git over https or ssh
        git_url: "https://github.com/<username>/bevel.git"                   # Gitops https or ssh url for flux value files 
        branch: "develop"                     # Git branch where release is being made
        release_dir: "platforms/hyperledger-indy/releases/dev"           # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/hyperledger-indy/charts"               # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/<username>/bevel.git"             # Gitops git repository URL for git push 
        username: "git_username"                    # Git Service user who has rights to check-in in all branches
        password: "git_access_token"                    # Git Server user password
        email: "git@email.com"                          # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has trustee
      services:
        trustee: authority-trustee

    # Specification for the 2nd organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: university
      # type: peer
      cloud_provider: aws                               # Supported values: 'aws-baremetal' | 'aws' | 'azure' | 'gcp' | 'minikube' | 
      external_url_suffix: indy.blockchaincloudpoc.com  # Provide the external dns suffix. Only used when Indy webserver/Clients are deployed.

      aws:
        access_key: "aws_access_key"            # AWS Access key
        secret_key: "aws_secret_key"            # AWS Secret key
        encryption_key: "encryption_key_id"     # AWS encryption key. If present, it's used as the KMS key id for K8S storage class encryption.
        zone: "availability_zone"               # AWS availability zone
        region: "region"                        # AWS region

      publicIps: ["1.1.1.1", "2.2.2.2"]        # List of all public IP addresses of each availability zone from all organizations in the same k8s cluster
      azure:
        node_resource_group: "MC_myResourceGroup_myCluster_westeurope"
      
      # Kubernetes cluster deployment variables. The config file path has to be provided in case
      # the cluster has already been created.
      k8s:
        config_file: "/path/to/cluster_config"
        context: "kubernetes-admin@kubernetes"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "vault_addr"
        root_token: "vault_root_token"
        
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "https" # Option for git over https or ssh
        git_url: "https://github.com/<username>/bevel.git"                   # Gitops https or ssh url for flux value files 
        branch: "develop"                     # Git branch where release is being made
        release_dir: "platforms/hyperledger-indy/releases/dev"           # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/hyperledger-indy/charts"               # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/<username>/bevel.git"             # Gitops git repository URL for git push 
        username: "git_username"                    # Git Service user who has rights to check-in in all branches
        password: "git_access_token"                    # Git Server user password
        email: "git@email.com"                          # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has trustee, 2 stewards and endoorser
      services:
        stewards:
        - steward:
          name: university-steward-1
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194    # IP address of current organization in current availability zone
          node:
            port: 9711
            targetPort: 9711
            ambassador: 9711        # Port for ambassador service
          client:
            port: 9712
            targetPort: 9712
            ambassador: 9712        # Port for ambassador service
        - steward:
          name: university-steward-2
          type: VALIDATOR
          genesis: true
          publicIp: 108.142.59.4 # 3.221.78.194    # IP address of current organization in current availability zone
          node:
            port: 9721
            targetPort: 9721
            ambassador:  9721        # Port for ambassador service
          client:
            port: 9722
            targetPort: 9722
            ambassador:  9722        # Port for ambassador service
        - steward:
          name: university-steward-3
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194    # IP address of the ambassador proxy
          node:
            port: 9731
            targetPort: 9731
            ambassador: 9721        # Port for ambassador service
          client:
            port: 9732
            targetPort: 9732
            ambassador: 9722        # Port for ambassador service
        - steward:
          name: university-steward-4
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194    # IP address of the ambassador proxy
          node:
            port: 9741
            targetPort: 9741
            ambassador: 9721        # Port for ambassador service
          client:
            port: 9742
            targetPort: 9742
            ambassador: 9722        # Port for ambassador service
        endorser: university-endorser
