##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "quorum-tessera-key-mgmt.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "quorum-tessera-key-mgmt.name" . }}
    app.kubernetes.io/name: quorum-tessera-key-mgmt-job
    app.kubernetes.io/component: tessera-key-mgmt-job
    app.kubernetes.io/part-of: {{ include "quorum-tessera-key-mgmt.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
spec:
  backoffLimit: 6
  template:
    metadata:
      labels:
        app: {{ include "quorum-tessera-key-mgmt.name" . }}
        app.kubernetes.io/name: quorum-tessera-key-mgmt-job
        app.kubernetes.io/component: tessera-key-mgmt-job
        app.kubernetes.io/part-of: {{ include "quorum-tessera-key-mgmt.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/managed-by: helm
    spec:
      restartPolicy: OnFailure
      imagePullSecrets:
        - name: "{{ $.Values.image.pullSecret }}"
      serviceAccountName: "{{ $.Values.global.vault.serviceAccountName }}"
      volumes:
        - name: scripts-volume
          configMap:
            name: bevel-vault-script
        - name: package-manager
          configMap:
            name: package-manager
      containers:
        - name:  "tessera-crypto"
          image: "{{ $.Values.image.repository }}"
          imagePullPolicy: IfNotPresent
          env:
          - name: VAULT_ADDR
            value: {{ $.Values.global.vault.address }}
          - name: VAULT_SECRET_ENGINE
            value: {{ $.Values.global.vault.secretEngine }}            
          - name: VAULT_KEY_PREFIX
            value: "{{ $.Values.global.vault.keyPrefix }}"     
          - name: PEER_NAME
            value: {{ $.Values.peer.name }}
          - name: KUBERNETES_AUTH_PATH
            value: {{ $.Values.global.vault.authPath }}
          - name: VAULT_APP_ROLE
            value: {{ $.Values.global.vault.role }}
          - name: VAULT_SECRET_PREFIX
            value: "{{ $.Values.global.vault.tmPrefix }}"
          - name: VAULT_TYPE
            value: "{{ $.Values.global.vault.type }}"
          command: ["/bin/bash", "-c"]
          args:
            - |-
              #!/usr/bin/env bash

              . /scripts/bevel-vault.sh
              . /scripts/package-manager.sh

              # Define the packages to install
              packages_to_install="jq curl"
              install_packages "$packages_to_install"

              # Calling a function to retrieve the vault token.
              vaultBevelFunc "init"
              # Generate tessera keys
              export HASHICORP_TOKEN="${VAULT_TOKEN}"
              /tessera/bin/tessera -keygen -keygenvaulttype HASHICORP -keygenvaulturl ${VAULT_ADDR} -keygenvaultsecretengine ${VAULT_SECRET_ENGINE} -filename ${VAULT_KEY_PREFIX}/${PEER_NAME}/tm
          volumeMounts:
          - name: scripts-volume
            mountPath: /scripts/bevel-vault.sh
            subPath: bevel-vault.sh
          - name: package-manager
            mountPath: /scripts/package-manager.sh
            subPath: package-manager.sh
