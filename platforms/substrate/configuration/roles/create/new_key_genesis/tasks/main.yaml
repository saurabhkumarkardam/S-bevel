# - name: Initialize counts
#   set_fact:
#     validator_count: 0
#     member_count: 0

# - name: Count validator nodes
#   set_fact:
#     validator_count: "{{ validator_count | int + 1 }}"
#   loop: "{{ peers }}"
#   loop_control:
#     loop_var: peer
#   when: peer.type == 'bootnode' or peer.type == 'validator'

# - name: Count member nodes
#   set_fact:
#     member_count: "{{ member_count | int  + 1 }}"
#   loop: "{{ peers }}"
#   loop_control:
#     loop_var: peer
#   when: peer.type == 'member'

- name: Initialize counts
  set_fact:
    validator_count: 0
    member_count: 0

# Create keys for each node
- name: Create keys for each node
  include_tasks: nodes.yaml
  vars:
    name: "generate-genesis" # "{{ item.name | lower }}"        
    component_name: "{{ item.name | lower }}"
    # component_ns: "{{ item.name | lower }}-subs"
    vault: "{{ item.vault }}"
    peers: "{{ item.services.peers }}"
    # charts_dir: "{{ item.gitops.chart_source }}"
    # values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/generate-genesis"
    org: "{{ item }}"
    gitops: "{{ item.gitops }}"
    kubernetes: "{{ item.k8s }}"
  loop: "{{ network['organizations'] }}"
  # vars:
  #   peer: "{{ peer }}"
  # loop: "{{ peers }}"
  # loop_control:
  #   loop_var: peer


- name: Debug counts again
  debug:
    msg: "Validator count: {{ validator_count }}, Member count: {{ member_count }}"

- name: Create key and genesis
  include_role:
    name: create/helm_component
  vars:    
    component_type: "key_mgmt"    
    type: "genesis_key"
    name: "generate-genesis" # "{{ org.name | lower }}"
    component_ns: "oem-subs"
    charts_dir: "platforms/substrate/charts" # "{{ item.gitops.chart_source }}"
    # values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/generate-genesis"
    values_dir: "{{playbook_dir}}/../../../platforms/substrate/releases/dev/generate-genesis"
    vault: "{{ network.organizations[0].vault }}"
    component_name: "generate-genesis" # "{{ peer.name }}-keys-job"

# Push the created deployment files to repository
- name: "Push the created deployment files to repository"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    component_ns: "oem-subs"
    GIT_DIR: "{{ playbook_dir }}/../../../"
    msg: "[ci skip] Pushing key management job files for {{ component_ns }}"
    gitops: "{{ network.organizations[0].gitops }}" # "{{ item.gitops }}"
  tags: notest
  # when: vault_keys_result.failed

# # Check if key job is completed
# - name: Check if key generation job is completed
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/checjk/helm_component"
#   vars:
#     component_name: "" # "{{ peer.name }}-keys-job"
#     component_type: Job
#     namespace: "{{ component_ns }}"
#   when: vault_keys_result.failed
#   tags: notest
